#!/bin/zsh

###########################
## Defining Chess Pieces ##
###########################

#shell doesnt have classes,
#so we need to use builtins.

#Format: <x><y><type><team>
#piece types:
#p - pawn
#r - rook
#n - knight
#b - bishop
#q - queen
#k - king

#piece teams:
#w - white
#b - black

initBoard=(
    11rw 21nw 31bw 41qw 51kw 61bw 71nw 81rw 
    12pw 22pw 32pw 42pw 52pw 62pw 72pw 82pw
    17pb 27pb 37pb 47pb 57pb 67pb 77pb 87pb
    18rb 28nb 38bb 48qb 58kb 68bb 78nb 88rb 
)
##############################
## End of piece definitions ##
##############################

#############
## Parsing ##
#############

function getPiecePos {
    local piece=$1
    echo "${piece:0:2}"
}
function getPieceType {
    local piece=$1
    echo ${piece:2:1}
}
function getPieceTeam {
    local piece=$1
    echo ${piece:3}
}

function searchPos {
    local pos=$1
    for piece in $initBoard
        if [[ $(getPiecePos $piece) == $pos ]]; then
            echo $piece
            return
        fi
    echo "empty"
}

function showPiece {
    local piece=$1
    case "${piece:2:2}" in
      "pw")
          echo ♟
          ;;
      "rw")
          echo ♜
          ;;
      "nw")
          echo ♞
          ;;
      "bw")
          echo ♝
          ;;
      "qw")
          echo ♛
          ;;
      "kw")
          echo ♚
          ;;
      "pb")
          echo ♙
          ;;
      "rb")
          echo ♖
          ;;
      "nb")
          echo ♘
          ;;
      "bb")
          echo ♗
          ;;
      "qb")
          echo ♕
          ;;
      "kb")
          echo ♔
          ;;
      "empty")
          echo .
          ;;
    esac
}

#################
## End parsing ##
#################


